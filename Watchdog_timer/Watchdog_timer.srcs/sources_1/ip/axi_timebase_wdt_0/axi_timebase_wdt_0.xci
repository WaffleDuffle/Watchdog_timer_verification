{
  "schema": "xilinx.com:schema:json_instance:1.0",
  "ip_inst": {
    "xci_name": "axi_timebase_wdt_0",
    "component_reference": "xilinx.com:ip:axi_timebase_wdt:3.0",
    "ip_revision": "23",
    "gen_directory": "../../../../Watchdog_timer.gen/sources_1/ip/axi_timebase_wdt_0",
    "parameters": {
      "component_parameters": {
        "C_WDT_INTERVAL": [ { "value": "30", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "Component_Name": [ { "value": "axi_timebase_wdt_0", "resolve_type": "user", "usage": "all" } ],
        "WDT_ENABLE_ONCE": [ { "value": "Enable_only_once", "resolve_type": "user", "usage": "all" } ],
        "ENABLE_WINDOW_WDT": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "MAX_COUNT_WIDTH": [ { "value": "32", "resolve_type": "user", "format": "long", "usage": "all" } ],
        "SST_COUNT_WIDTH": [ { "value": "8", "resolve_type": "user", "format": "long", "usage": "all" } ]
      },
      "model_parameters": {
        "C_FAMILY": [ { "value": "virtex7", "resolve_type": "generated", "usage": "all" } ],
        "C_WDT_INTERVAL": [ { "value": "30", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_WDT_ENABLE_ONCE": [ { "value": "1", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_S_AXI_DATA_WIDTH": [ { "value": "32", "format": "long", "usage": "all" } ],
        "C_S_AXI_ADDR_WIDTH": [ { "value": "4", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_ENABLE_WINDOW_WDT": [ { "value": "0", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_SST_COUNT_WIDTH": [ { "value": "8", "resolve_type": "generated", "format": "long", "usage": "all" } ],
        "C_MAX_COUNT_WIDTH": [ { "value": "32", "resolve_type": "generated", "format": "long", "usage": "all" } ]
      },
      "project_parameters": {
        "ARCHITECTURE": [ { "value": "virtex7" } ],
        "BASE_BOARD_PART": [ { "value": "" } ],
        "BOARD_CONNECTIONS": [ { "value": "" } ],
        "DEVICE": [ { "value": "xc7vx485t" } ],
        "NEXTGEN_VERSAL": [ { "value": "0" } ],
        "PACKAGE": [ { "value": "ffg1157" } ],
        "PREFHDL": [ { "value": "VERILOG" } ],
        "SILICON_REVISION": [ { "value": "" } ],
        "SIMULATOR_LANGUAGE": [ { "value": "MIXED" } ],
        "SPEEDGRADE": [ { "value": "-1" } ],
        "STATIC_POWER": [ { "value": "" } ],
        "TEMPERATURE_GRADE": [ { "value": "" } ]
      },
      "runtime_parameters": {
        "IPCONTEXT": [ { "value": "IP_Flow" } ],
        "IPREVISION": [ { "value": "23" } ],
        "MANAGED": [ { "value": "TRUE" } ],
        "OUTPUTDIR": [ { "value": "../../../../Watchdog_timer.gen/sources_1/ip/axi_timebase_wdt_0" } ],
        "SELECTEDSIMMODEL": [ { "value": "" } ],
        "SHAREDDIR": [ { "value": "." } ],
        "SWVERSION": [ { "value": "2024.1" } ],
        "SYNTHESISFLOW": [ { "value": "OUT_OF_CONTEXT" } ]
      }
    },
    "boundary": {
      "ports": {
        "s_axi_araddr": [ { "direction": "in", "size_left": "3", "size_right": "0" } ],
        "s_axi_arready": [ { "direction": "out" } ],
        "s_axi_arvalid": [ { "direction": "in" } ],
        "s_axi_awaddr": [ { "direction": "in", "size_left": "3", "size_right": "0" } ],
        "s_axi_awready": [ { "direction": "out" } ],
        "s_axi_awvalid": [ { "direction": "in" } ],
        "s_axi_bready": [ { "direction": "in" } ],
        "s_axi_bresp": [ { "direction": "out", "size_left": "1", "size_right": "0" } ],
        "s_axi_bvalid": [ { "direction": "out" } ],
        "s_axi_rdata": [ { "direction": "out", "size_left": "31", "size_right": "0" } ],
        "s_axi_rready": [ { "direction": "in" } ],
        "s_axi_rresp": [ { "direction": "out", "size_left": "1", "size_right": "0" } ],
        "s_axi_rvalid": [ { "direction": "out" } ],
        "s_axi_wdata": [ { "direction": "in", "size_left": "31", "size_right": "0" } ],
        "s_axi_wready": [ { "direction": "out" } ],
        "s_axi_wstrb": [ { "direction": "in", "size_left": "3", "size_right": "0" } ],
        "s_axi_wvalid": [ { "direction": "in" } ],
        "freeze": [ { "direction": "in", "driver_value": "0" } ],
        "s_axi_aclk": [ { "direction": "in" } ],
        "s_axi_aresetn": [ { "direction": "in" } ],
        "timebase_interrupt": [ { "direction": "out" } ],
        "wdt_interrupt": [ { "direction": "out" } ],
        "wdt_reset": [ { "direction": "out" } ]
      },
      "interfaces": {
        "S_AXI": {
          "vlnv": "xilinx.com:interface:aximm:1.0",
          "abstraction_type": "xilinx.com:interface:aximm_rtl:1.0",
          "mode": "slave",
          "memory_map_ref": "S_AXI",
          "parameters": {
            "DATA_WIDTH": [ { "value": "32", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PROTOCOL": [ { "value": "AXI4LITE", "value_src": "constant", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ID_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ADDR_WIDTH": [ { "value": "4", "value_src": "auto", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "AWUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "ARUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "BUSER_WIDTH": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "READ_WRITE_MODE": [ { "value": "READ_WRITE", "value_src": "constant", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BURST": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_LOCK": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_PROT": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_CACHE": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_QOS": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_REGION": [ { "value": "0", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_WSTRB": [ { "value": "1", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_BRESP": [ { "value": "1", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "HAS_RRESP": [ { "value": "1", "value_src": "constant", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "SUPPORTS_NARROW_BURST": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_OUTSTANDING": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_OUTSTANDING": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "MAX_BURST_LENGTH": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_READ_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "NUM_WRITE_THREADS": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "RUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "WUSER_BITS_PER_BYTE": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "ARADDR": [ { "physical_name": "s_axi_araddr" } ],
            "ARREADY": [ { "physical_name": "s_axi_arready" } ],
            "ARVALID": [ { "physical_name": "s_axi_arvalid" } ],
            "AWADDR": [ { "physical_name": "s_axi_awaddr" } ],
            "AWREADY": [ { "physical_name": "s_axi_awready" } ],
            "AWVALID": [ { "physical_name": "s_axi_awvalid" } ],
            "BREADY": [ { "physical_name": "s_axi_bready" } ],
            "BRESP": [ { "physical_name": "s_axi_bresp" } ],
            "BVALID": [ { "physical_name": "s_axi_bvalid" } ],
            "RDATA": [ { "physical_name": "s_axi_rdata" } ],
            "RREADY": [ { "physical_name": "s_axi_rready" } ],
            "RRESP": [ { "physical_name": "s_axi_rresp" } ],
            "RVALID": [ { "physical_name": "s_axi_rvalid" } ],
            "WDATA": [ { "physical_name": "s_axi_wdata" } ],
            "WREADY": [ { "physical_name": "s_axi_wready" } ],
            "WSTRB": [ { "physical_name": "s_axi_wstrb" } ],
            "WVALID": [ { "physical_name": "s_axi_wvalid" } ]
          }
        },
        "S_AXI_ACLK": {
          "vlnv": "xilinx.com:signal:clock:1.0",
          "abstraction_type": "xilinx.com:signal:clock_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "ASSOCIATED_BUSIF": [ { "value": "S_AXI", "value_src": "constant", "usage": "all" } ],
            "ASSOCIATED_RESET": [ { "value": "s_axi_aresetn:wdt_reset", "value_src": "constant", "usage": "all" } ],
            "FREQ_HZ": [ { "value": "100000000", "resolve_type": "user", "format": "long", "usage": "all" } ],
            "FREQ_TOLERANCE_HZ": [ { "value": "0", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ],
            "PHASE": [ { "value": "0.0", "resolve_type": "generated", "format": "float", "is_ips_inferred": true, "is_static_object": false } ],
            "CLK_DOMAIN": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "ASSOCIATED_PORT": [ { "value": "", "resolve_type": "generated", "is_ips_inferred": true, "is_static_object": false } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "CLK": [ { "physical_name": "s_axi_aclk" } ]
          }
        },
        "S_AXI_ARESETN": {
          "vlnv": "xilinx.com:signal:reset:1.0",
          "abstraction_type": "xilinx.com:signal:reset_rtl:1.0",
          "mode": "slave",
          "parameters": {
            "POLARITY": [ { "value": "ACTIVE_LOW", "value_src": "constant", "usage": "all" } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "RST": [ { "physical_name": "s_axi_aresetn" } ]
          }
        },
        "TIMEBASE_INTERRUPT": {
          "vlnv": "xilinx.com:signal:interrupt:1.0",
          "abstraction_type": "xilinx.com:signal:interrupt_rtl:1.0",
          "mode": "master",
          "parameters": {
            "SENSITIVITY": [ { "value": "LEVEL_HIGH", "value_src": "constant", "usage": "all" } ],
            "PortWidth": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "INTERRUPT": [ { "physical_name": "timebase_interrupt" } ]
          }
        },
        "WDT_INTERRUPT": {
          "vlnv": "xilinx.com:signal:interrupt:1.0",
          "abstraction_type": "xilinx.com:signal:interrupt_rtl:1.0",
          "mode": "master",
          "parameters": {
            "SENSITIVITY": [ { "value": "LEVEL_HIGH", "value_src": "constant", "usage": "all" } ],
            "PortWidth": [ { "value": "1", "resolve_type": "generated", "format": "long", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "INTERRUPT": [ { "physical_name": "wdt_interrupt" } ]
          }
        },
        "WDT_RESET": {
          "vlnv": "xilinx.com:signal:reset:1.0",
          "abstraction_type": "xilinx.com:signal:reset_rtl:1.0",
          "mode": "master",
          "parameters": {
            "POLARITY": [ { "value": "ACTIVE_HIGH", "value_src": "constant", "usage": "all" } ],
            "INSERT_VIP": [ { "value": "0", "resolve_type": "user", "format": "long", "usage": "simulation.rtl", "is_ips_inferred": true, "is_static_object": false } ]
          },
          "port_maps": {
            "RST": [ { "physical_name": "wdt_reset" } ]
          }
        }
      },
      "memory_maps": {
        "S_AXI": {
          "display_name": "S_AXI_MEM",
          "description": "Memory Map for S_AXI",
          "address_blocks": {
            "Reg": {
              "base_address": "0",
              "range": "2048",
              "display_name": "Reg",
              "description": "Register Block",
              "usage": "register",
              "access": "read-write",
              "registers": {
                "TWCSR0": {
                  "address_offset": "0x00",
                  "size": 32,
                  "display_name": "TWCSR0",
                  "description": "Control/Status Register 0",
                  "is_volatile": true,
                  "access": "read-write",
                  "reset_value": "0x0",
                  "fields": {
                    "EWDT2": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "Enable Watchdog Timer (Enable 2)",
                      "description": "Enable Watchdog Timer (Enable 2)\nThis bit is read-only and is the only place to read back a value written to Bit[0] of TWCSR1.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    },
                    "EWDT1": {
                      "bit_offset": 1,
                      "bit_width": 1,
                      "display_name": "Enable Watchdog Timer (Enable 1)",
                      "description": "Enable Watchdog Timer (Enable 1)\nThis bit must be used in conjunction with the EWDT2 bit in the TWCSR1 register. Both bits must be 0 to disable the WDT.   0 - Disable WDT function if EWDT2 also equals 0   1 - Enable WDT function\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "WDS": {
                      "bit_offset": 2,
                      "bit_width": 1,
                      "display_name": "Watchdog Timer State",
                      "description": "Watchdog Timer State\nIndicates the WDT period has expired. The wdt_reset signal is asserted if the WDT period expires again before this bit is cleared by software.\nWriting a 1 to this bit clears the watchdog timer state.\nWriting a 0 to this bit has no effect.   0 - WDT period has not expired   1 - WDT period has expired, reset occurs on next expiration\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "WRS": {
                      "bit_offset": 3,
                      "bit_width": 1,
                      "display_name": "Watchdog Reset Status",
                      "description": "Watchdog Reset Status\nIndicates the WDT reset signal was asserted. This bit is not cleared by a system reset so that it can be read after a system reset to determine if the reset was caused by a watchdog timeout.\nThis bit can be cleared by applying reset to the IP (asserting the s_axi_aresetn) followed by writing 1 to this bit. Writing a 0 to this bit has no effect.   0 - WDT reset has not occurred   1 - WDT reset has occurred\n",
                      "is_volatile": true,
                      "access": "read-write"
                    },
                    "TBR": {
                      "bit_offset": 4,
                      "bit_width": 28,
                      "display_name": "Timebase Register (Most significant 28 bits)",
                      "description": "Timebase Register (Most significant 28 bits)\nThis read-only field contains the most significant 28 bits of the timebase register. The timebase register is mirrored here so that a single read can be used to obtain the count value and the watchdog timer state if the upper 28 bits of the timebase provide sufficient timing resolution.\n",
                      "is_volatile": true,
                      "access": "read-only"
                    }
                  }
                },
                "TWCSR1": {
                  "address_offset": "0x04",
                  "size": 32,
                  "display_name": "TWCSR1",
                  "description": "Control/Status Register 1",
                  "is_volatile": true,
                  "access": "write-only",
                  "reset_value": "0x0",
                  "fields": {
                    "EWDT2": {
                      "bit_offset": 0,
                      "bit_width": 1,
                      "display_name": "Enable Watchdog Timer (Enable 2)",
                      "description": "Enable Watchdog Timer (Enable 2)\nThis bit must be used in conjunction with the EWDT1 bit in the TWCSR0 register to disable the WDT. Both bits must be 0 to disable the WDT.\nThe value of EWDT2 can be read back only in TWCSR0.   0 - Disable WDT function if EWDT1 also equals 0   1 - Enable WDT function\n",
                      "is_volatile": true,
                      "access": "write-only"
                    }
                  }
                },
                "TBR": {
                  "address_offset": "0x08",
                  "size": 32,
                  "display_name": "TBR",
                  "description": "Timebase Register",
                  "is_volatile": true,
                  "access": "read-only",
                  "reset_value": "0x0",
                  "fields": {
                    "TBR": {
                      "bit_offset": 0,
                      "bit_width": 32,
                      "display_name": "Timebase Register",
                      "description": "Timebase Register\nThis register indicates the free-running incrementing counter value\n",
                      "is_volatile": true,
                      "access": "read-only"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}